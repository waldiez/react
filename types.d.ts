/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type WaldiezAgentHumanInputMode = 'ALWAYS' | 'NEVER' | 'TERMINATE';
export type WaldiezAgentCodeExecutionConfig = WaldiezAgentCodeExecutionConfigDict | false;
export type WaldiezAgentTypeTerminationTypeOption = 'none' | 'keyword' | 'method';
export type WaldiezAgentTerminationCriterionOption = 'found' | 'ending' | 'exact';
export type WaldiezGroupManagerSpeakerSelectionMethodOption =
  | 'auto'
  | 'manual'
  | 'random'
  | 'round_robin'
  | 'custom';
export type SpeakerSelectionMode = 'repeat' | 'transition';
export type SpeakerTransitionsType = 'allowed' | 'disallowed';
export type WaldiezModelAPIType =
  | 'openai'
  | 'azure'
  | 'google'
  | 'anthropic'
  | 'mistral'
  | 'grog'
  | 'together'
  | 'other'
  | null;
export type WaldiezMessageType = 'string' | 'method' | 'none' | 'last_carryover' | 'rag_message_generator';
export type WaldiezEdgeLlmSummaryMethod = 'reflection_with_llm' | 'last_msg' | null;

/**
 * Waldie Schema.
 */
export interface HttpsGithubComWaldiezJsTreeV001SchemaJson {
  type: 'flow';
  id?: string;
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    nodes: {
      [k: string]: unknown;
    }[];
    edges: {
      [k: string]: unknown;
    }[];
    viewport?: {
      [k: string]: unknown;
    };
    agents: {
      users: WaldiezUserProxy[];
      assistants: WaldiezAssistant[];
      managers: WaldiezGroupManager[];
    };
    models: WaldiezModel[];
    skills: WaldiezSkill[];
    chats: WaldiezChat[];
  };
}
/**
 * Waldie User Proxy Agent.
 */
export interface WaldiezUserProxy {
  id?: string;
  type: 'agent';
  agentType: 'user';
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    systemMessage: string | null;
    humanInputMode: WaldiezAgentHumanInputMode;
    maxTokens: number | null;
    codeExecutionConfig: WaldiezAgentCodeExecutionConfig;
    agentDefaultAutoReply: string | null;
    maxConsecutiveAutoReply: number | null;
    termination: WaldiezAgentTerminationMessageCheck;
    teachability: WaldiezAgentTeachability;
    modelIds: string[];
    skills: WaldiezAgentLinkedSkill[];
    requirements: string[];
    nestedChats: WaldiezAgentNestedChat[];
  };
}
export interface WaldiezAgentCodeExecutionConfigDict {
  workDir?: string;
  useDocker?: string | string[] | boolean;
  timeout?: number;
  lastNMessages?: number | 'auto';
  functions?: string[];
}
export interface WaldiezAgentTerminationMessageCheck {
  type: WaldiezAgentTypeTerminationTypeOption;
  keywords: string[];
  criterion: WaldiezAgentTerminationCriterionOption | null;
  methodContent: string | null;
}
export interface WaldiezAgentTeachability {
  enabled: boolean;
  verbosity: 0 | 1 | 2 | 3;
  resetDb: boolean;
  recallThreshold: number;
  maxMumRetrievals: number;
}
export interface WaldiezAgentLinkedSkill {
  id: string;
  executorId: string;
}
export interface WaldiezAgentNestedChat {
  triggeredBy: {
    id: string;
    isReply: boolean;
  }[];
  messages: {
    id: string;
    isReply: boolean;
  }[];
}
/**
 * Waldie Assistant Agent.
 */
export interface WaldiezAssistant {
  id?: string;
  type: 'agent';
  agentType: 'assistant';
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    systemMessage: string | null;
    humanInputMode: WaldiezAgentHumanInputMode;
    maxTokens: number | null;
    codeExecutionConfig: WaldiezAgentCodeExecutionConfig;
    agentDefaultAutoReply: string | null;
    maxConsecutiveAutoReply: number | null;
    termination: WaldiezAgentTerminationMessageCheck;
    teachability: WaldiezAgentTeachability;
    modelIds: string[];
    skills: WaldiezAgentLinkedSkill[];
    requirements: string[];
    nestedChats: WaldiezAgentNestedChat[];
  };
}
/**
 * Waldie Group Chat Manager Agent.
 */
export interface WaldiezGroupManager {
  id?: string;
  type: 'agent';
  agentType: 'manager';
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    systemMessage: string | null;
    humanInputMode: WaldiezAgentHumanInputMode;
    maxTokens: number | null;
    codeExecutionConfig: WaldiezAgentCodeExecutionConfig;
    agentDefaultAutoReply: string | null;
    maxConsecutiveAutoReply: number | null;
    termination: WaldiezAgentTerminationMessageCheck;
    teachability: WaldiezAgentTeachability;
    modelIds: string[];
    skills: WaldiezAgentLinkedSkill[];
    requirements: string[];
    maxRound: number | null;
    adminName: string | null;
    speakers: WaldiezGroupManagerSpeakers;
    enableClearHistory?: boolean;
    sendIntroductions?: boolean;
  };
}
export interface WaldiezGroupManagerSpeakers {
  selectionMethod: WaldiezGroupManagerSpeakerSelectionMethodOption;
  selectionCustomMethod: string;
  maxRetriesForSelecting: number | null;
  selectionMode: SpeakerSelectionMode;
  allowRepeat: boolean | string[];
  allowedOrDisallowedTransitions: {
    [k: string]: string[];
  };
  transitionsType: SpeakerTransitionsType;
}
/**
 * Waldie Model.
 */
export interface WaldiezModel {
  id?: string;
  type: 'model';
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    baseUrl: string | null;
    apiKey: string | null;
    apiType: WaldiezModelAPIType;
    apiVersion: string | null;
    temperature: number | null;
    topP: number | null;
    maxTokens: number | null;
    defaultHeaders: {
      [k: string]: string;
    };
    price: WaldiezModelPrice | null;
    requirements: string[];
  };
}
export interface WaldiezModelPrice {
  promptPricePer1k: number | null;
  completionTokenPricePer1k: number | null;
}
/**
 * Waldie Skill.
 */
export interface WaldiezSkill {
  id?: string;
  type: 'skill';
  name: string;
  description: string;
  tags: string[];
  requirements: string[];
  data: {
    content: string;
    secrets: {
      [k: string]: string;
    };
    requirements: string[];
  };
}
/**
 * Waldie Chat.
 */
export interface WaldiezChat {
  id?: string;
  data: {
    name: string;
    source: string;
    target: string;
    description: string;
    position: number;
    clearHistory: boolean | null;
    message: WaldiezMessage;
    nestedChat: {
      message: WaldiezMessage | null;
      reply: WaldiezMessage | null;
    };
    maxTurns: number | null;
  };
}
/**
 * Waldie Message.
 *
 * A generic message with a type and content.
 *
 * If the type is not 'none', the content is a string. If the type is 'method', the content is the code of a method.
 */
export interface WaldiezMessage {
  type: WaldiezMessageType;
  content: string | null;
  context: { [key: string]: any };
}
