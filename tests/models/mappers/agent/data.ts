import { defaultRetrieveConfig } from "@waldiez/models/Agent";

export const userJson = {
    id: "wa-1",
    type: "agent",
    name: "User",
    description: "New user",
    agentType: "user",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "ALWAYS",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
    },
    position: { x: 10, y: 11 },
};

export const assistantJson = {
    id: "assistant",
    type: "agent",
    agentType: "assistant",
    name: "Assistant",
    description: "New assistant",
    tags: ["tag1"],
    requirements: ["requirement1"],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
    },
    position: { x: 20, y: 21 },
};

export const groupManagerJson = {
    id: "groupManager",
    type: "agent",
    agentType: "manager",
    name: "Manager",
    description: "A group manager agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
        maxRound: 1,
        adminName: "admin",
        speakers: {
            selectionMethod: "auto",
            selectionCustomMethod: "",
            maxRetriesForSelecting: 4,
            selectionMode: "repeat",
            allowRepeat: true,
            allowedOrDisallowedTransitions: {},
            transitionsType: "allowed",
        },
        enableClearHistory: true,
        sendIntroductions: true,
    },
    key: "value",
    position: { x: 30, y: 31 },
};

export const ragUserJson = {
    id: "ragUser",
    type: "agent",
    agentType: "rag_user",
    name: "Rag User",
    description: "A rag user agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "ALWAYS",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
        retrieveConfig: defaultRetrieveConfig,
    },
    key: "value",
    position: { x: 40, y: 41 },
};

export const swarmJson = {
    id: "swarm",
    type: "agent",
    agentType: "swarm",
    name: "Swarm",
    description: "A swarm agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
        functions: [],
        updateAgentStateBeforeReply: [],
        handoffs: [],
    },
    key: "value",
    position: { x: 50, y: 51 },
};

export const swarmContainerJson = {
    id: "swarm",
    type: "agent",
    agentType: "swarm_container",
    name: "Swarm Container",
    description: "A swarm container agent",
    tags: [],
    requirements: [],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    data: {
        humanInputMode: "NEVER",
        systemMessage: null,
        codeExecutionConfig: false,
        agentDefaultAutoReply: null,
        maxConsecutiveAutoReply: null,
        termination: {
            type: "none",
            keywords: [],
            criterion: null,
            methodContent: null,
        },
        modelIds: [],
        skills: [],
        parentId: null,
        nestedChats: [],
    },
    key: "value",
    position: { x: 60, y: 61 },
};
